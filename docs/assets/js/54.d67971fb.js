(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{209:function(t,e,a){"use strict";a.r(e);var n=a(0),v=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"第四章-数组、串与广义表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四章-数组、串与广义表","aria-hidden":"true"}},[t._v("#")]),t._v(" 第四章 数组、串与广义表")]),t._v(" "),a("ul",[a("li",[t._v("数组部分")])]),t._v(" "),a("blockquote",[a("p",[t._v("主要讲了普通数组的存储和特殊矩阵的压缩存储。")])]),t._v(" "),a("p",[t._v("多维数组：二维数组可以用以一维数组为元素的一维数组表示，三维数组可以用二维数组和一维数组表示（一般是以行优先表示的）。\n对称矩阵：a(i,j)等于a(j,i)，所以只需要存储大约一半的数据。\n稀疏矩阵：因为矩阵内部大部分元素为0，所以只需要存储非零项就OK了，这样可以节省大量的空间，使用一个三元组结构体的数组存放非0项。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("template <class T>\nstruct Trituple{\n    int row, col;   //存放元素在矩阵中的位置\n    T value;\n}\n")])])]),a("p",[t._v("关于稀疏矩阵的转置，也有很巧妙的解决办法。转置操作需要对元素进行重新排列：使用普通的循环即可完成排序工作，\n【一种优化方法：扫描所有的元素，使用两个辅助数组记录每行的元素数目和起始元素的列号。然后按照转置的定义重新排列元素】")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("串部分\n主要是字符串")])]),t._v(" "),a("li",[a("p",[t._v("广义表\n广义表简称表，是线性表的推广，广义表中的元素可以是数据元素（原子）和子表。\n广义表的定义是递归的，因为在表的描述中又用到了表，允许表中有表。\nLS=(a0, a1, a2, ... )\n表的表示方法，依然用到了结点的概念。用结点表示一个元素，这个结点分为3个部分：")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("标志域utype")]),t._v(" "),a("th",[t._v("信息域info")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("尾指针域tlink")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("0")]),t._v(" "),a("td",[t._v("引用数ref")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指向同层下一个结点")])]),t._v(" "),a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("元素值value")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("子表的链接")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),a("p",[t._v("utype=0时，该结点是附加头结点，ref记录了本表被引用——作为表元素的次数。\n每一个子表都有一个附加头，这样做在删除一个表的第一个结点的时候会很方便。因为不用修改指向该表的指针，此时该表的地址用附加头的地址表示，删除任何一个结点都不会改变该表的地址。")])])}],!1,null,null,null);e.default=v.exports}}]);