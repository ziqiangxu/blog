"use strict";(self.webpackChunkziqiangxu_github_io=self.webpackChunkziqiangxu_github_io||[]).push([[2249],{8215:(e,i,a)=>{a.r(i),a.d(i,{data:()=>t});const t={key:"v-4e58d651",path:"/computer-vision/%E7%BB%9F%E8%AE%A1%E5%86%B3%E7%AD%96%E6%96%B9%E6%B3%95.html",title:"统计决策方法",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"贝叶斯公式",slug:"贝叶斯公式",children:[]},{level:2,title:"参考资料",slug:"参考资料",children:[]}],filePathRelative:"computer-vision/统计决策方法.md",git:{updatedTime:162772697e4}}},6633:(e,i,a)=>{a.r(i),a.d(i,{default:()=>l});const t=(0,a(6252).uE)('<h1 id="统计决策方法" tabindex="-1"><a class="header-anchor" href="#统计决策方法" aria-hidden="true">#</a> 统计决策方法</h1><ul><li>先验概率：没有对样本（本次分析的样本）进行任何观测就给定的概率</li><li>后验概率：对本次分析进行观测之后得到的概率</li></ul><h2 id="贝叶斯公式" tabindex="-1"><a class="header-anchor" href="#贝叶斯公式" aria-hidden="true">#</a> 贝叶斯公式</h2><p><strong>贝叶斯公式</strong> $ P(\\omega_i|x) = \\frac{p(x, \\omega_i)}{p(x)} = \\frac{p(x | \\omega_i)\\cdot P(\\omega_i)}{p(x)}, \\space\\space\\space\\space i=1, 2 $</p><ul><li>$P(\\omega_i)$ 是先验概率</li><li>$p(x|\\omega_i)$ 类条件密度（根据对样本的分析得到的概率，当测算值为$x$时此样本属于$\\omega_i$类别的概率）</li><li>$p(x, \\omega_i)$ 成为联合概率密度，此处为先验概率和类条件密度的成绩</li><li>$p(x)$ 是总体概率，式中用其来进行归一化</li><li>$P(\\omega_i|x)$ 是后验概率</li></ul><p><strong>错误率</strong> $P(e) = \\int P(e | x)p(x) {\\rm dx}$ 用 $\\int \\cdot {\\rm dx}$ 表示在特征 $x$ 的全部取值空间做积分</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2><p>《模式识别 Pattern Recognition》第三版，张学工编著，清华大学出版社</p>',8),l={render:function(e,i){return t}}}}]);