(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{455:function(t,a,s){"use strict";s.r(a);var r=s(45),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"线性表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性表"}},[t._v("#")]),t._v(" 线性表")]),t._v(" "),s("p",[s("strong",[t._v("线性表：")]),t._v(" 一个有限序列，每个表项是相继排列的，每两个相邻表项都有直接前驱和直接后继关系。")]),t._v(" "),s("h2",{attrs:{id:"按存储方式分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按存储方式分类"}},[t._v("#")]),t._v(" 按存储方式分类")]),t._v(" "),s("p",[s("strong",[t._v("顺序表：")]),t._v(" 基于数组的存储表示，结点逻辑顺序和物理顺序一致。\n"),s("strong",[t._v("单链表：")]),t._v(" 每个结点有data和link两个域。用link域（指针）表示结点间的逻辑关系，结点逻辑顺序和物理顺序不一定一样。")]),t._v(" "),s("h2",{attrs:{id:"线性链表的其它变形"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性链表的其它变形"}},[t._v("#")]),t._v(" 线性链表的其它变形")]),t._v(" "),s("ul",[s("li",[t._v("循环链表：最后一个结点的link域指向开始结点。【单链表是指向NULL】")]),t._v(" "),s("li",[t._v("双向链表：每个结点有前驱指针（左指针）和后继指针（右指针）两个link域。")])]),t._v(" "),s("h2",{attrs:{id:"重要相关概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重要相关概念"}},[t._v("#")]),t._v(" 重要相关概念")]),t._v(" "),s("ul",[s("li",[t._v("附加头结点：在链表第一个结点前增加“附加头结点”，它的data域可以不存放数据，也可以存放特殊标致或者表长。这样使空表与非空表第一个结点插入数据可以不作为特殊情况处理。")])]),t._v(" "),s("comment-comment")],1)}),[],!1,null,null,null);a.default=e.exports}}]);