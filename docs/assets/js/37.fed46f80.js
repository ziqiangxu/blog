(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{211:function(t,e,a){"use strict";a.r(e);var n=a(0),v=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"创建-python-虚拟环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-python-虚拟环境","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建 "),a("code",[t._v("Python")]),t._v(" 虚拟环境")]),t._v(" "),a("blockquote",[a("p",[t._v("如果你同时负责多个Python项目，或者想要轻松打包某个项目及其关联的库文件，再或者你担心已经安装的库之间会发生冲突，你可以创建一个虚拟环境来分而治之。")])]),t._v(" "),a("h2",{attrs:{id:"创建虚拟环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建虚拟环境","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建虚拟环境")]),t._v(" "),a("p",[t._v("在Linux终端里输入：\n"),a("code",[t._v("virtualenv env")]),t._v("\n这样就创建了一个名为 "),a("code",[t._v("env")]),t._v(" 的虚拟环境。如果提示 "),a("code",[t._v("virtualen：未找到命令")]),t._v(" 的话，\n安装一下这个命令就好了： "),a("code",[t._v("sudo apt-get install virtualenv")])]),t._v(" "),a("h2",{attrs:{id:"激活虚拟空间："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#激活虚拟空间：","aria-hidden":"true"}},[t._v("#")]),t._v(" 激活虚拟空间：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd env\nsource bin/activate\n")])])]),a("p",[t._v("激活虚拟空间之后你会发现环境名称会出现在命令提示符前面。我这里显示：\n"),a("code",[t._v("(env) xu@xu-pc:~/env$:")]),t._v("\n现在你安装的所有库和执行的程序都是在这个虚拟环境里进行的。")]),t._v(" "),a("h2",{attrs:{id:"退出环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#退出环境","aria-hidden":"true"}},[t._v("#")]),t._v(" 退出环境")]),t._v(" "),a("p",[t._v("输入： "),a("code",[t._v("deactivate")]),t._v("\n就会回到真实的全局环境。\n将项目关联的所有库单独放在一个虚拟的环境里，可以轻松打包整个环境发送给其他人。只要他们的 "),a("code",[t._v("python")]),t._v(" 版本和你的相同，你打包的代码就可以直接通过虚拟环境运行，不需要再安装任何库。")]),t._v(" "),a("p",[t._v("参考文献：《Python网络数据采集》Ryan Mitchell著")])])}],!1,null,null,null);e.default=v.exports}}]);