(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{464:function(v,_,o){"use strict";o.r(_);var e=o(45),t=Object(e.a)({},(function(){var v=this,_=v.$createElement,o=v._self._c||_;return o("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[o("h1",{attrs:{id:"关闭-chrome-的安全策略-可用于跨域"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#关闭-chrome-的安全策略-可用于跨域"}},[v._v("#")]),v._v(" 关闭 "),o("code",[v._v("chrome")]),v._v(" 的安全策略：可用于跨域")]),v._v(" "),o("p",[v._v("对于 "),o("code",[v._v("Linux")]),v._v("，终端执行:\n"),o("code",[v._v("google-chrome --disable-web-security --user-data-dir=<path to store the data>")]),v._v("。")]),v._v(" "),o("blockquote",[o("p",[v._v("如 "),o("code",[v._v("google-chrome --disable-web-security --user-data-dir=/home/xu/test-dir")])])]),v._v(" "),o("ul",[o("li",[v._v("其中 "),o("code",[v._v("--disable-web-security")]),v._v(" 选项关闭 "),o("code",[v._v("web")]),v._v(" 的一些安全策略【其中包括阻止不合法的跨域请求】。")]),v._v(" "),o("li",[v._v("在 "),o("code",[v._v("Linux")]),v._v(" 下，如果要关闭安全策略，则必须指定一个目录 "),o("code",[v._v("user-data-dir")]),v._v(" 用于保存这样运行浏览器所产生的一些数据")])]),v._v(" "),o("h2",{attrs:{id:"使用场景"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[v._v("#")]),v._v(" 使用场景")]),v._v(" "),o("p",[v._v("前后端分离开发时")]),v._v(" "),o("ul",[o("li",[v._v("前端运行在 "),o("code",[v._v("http://localhost:8080")])]),v._v(" "),o("li",[v._v("后端运行在 "),o("code",[v._v("http://localhost:8000")])])]),v._v(" "),o("p",[v._v("这时前端对后端发起请求属于跨域了（只要协议、域名、端口有任何一个的不同，就被当作是跨域——不同"),o("strong",[v._v("域")]),v._v("），正式上线网站的时候一般都会把前后端放到一个"),o("strong",[v._v("域")]),v._v("里，比如将前端打包成静态资源后使用 "),o("code",[v._v("nginx")]),v._v(" 进行部署或者直接由和后台代码放在一起。")]),v._v(" "),o("h2",{attrs:{id:"限制跨域访问是浏览器的安全策略-主要有两种"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#限制跨域访问是浏览器的安全策略-主要有两种"}},[v._v("#")]),v._v(" 限制跨域访问是浏览器的安全策略，主要有两种：")]),v._v(" "),o("ul",[o("li",[o("code",[v._v("DOM")]),v._v(" 同源策略：禁止对不同源页面 "),o("code",[v._v("DOM")]),v._v(" 进行操作。这里主要场景是 "),o("code",[v._v("iframe")]),v._v(" 跨域的情况，不同"),o("strong",[v._v("域")]),v._v("的 "),o("code",[v._v("iframe")]),v._v(" 是限制互相访问的。")]),v._v(" "),o("li",[o("code",[v._v("XMLHttpRequest")]),v._v(" 同源策略：禁止使用 "),o("code",[v._v("XHR")]),v._v(" 对象向不同"),o("strong",[v._v("域")]),v._v("发起 "),o("code",[v._v("HTTP")]),v._v(" 请求。")])]),v._v(" "),o("h2",{attrs:{id:"为什么浏览器要这样做"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#为什么浏览器要这样做"}},[v._v("#")]),v._v(" 为什么浏览器要这样做？")]),v._v(" "),o("p",[v._v("当然是为了安全啊")]),v._v(" "),o("p",[v._v("我们假设有两个"),o("strong",[v._v("域")]),v._v(":")]),v._v(" "),o("ul",[o("li",[o("strong",[v._v("域")]),v._v("1：存着你血汗钱的网站： "),o("code",[v._v("http://money.com")])]),v._v(" "),o("li",[o("strong",[v._v("域")]),v._v("：一个恶意网站： "),o("code",[v._v("http://坏人.com")])])]),v._v(" "),o("p",[v._v("为了方便在客户端存储少量信息，浏览器推出了 "),o("code",[v._v("cookie")]),v._v(" 这样的功能。")]),v._v(" "),o("blockquote",[o("p",[v._v("即浏览器每次发起 "),o("code",[v._v("http")]),v._v(" 请求，浏览器都会自动带上这个"),o("strong",[v._v("域")]),v._v("的 "),o("code",[v._v("cookie")]),v._v("， 比如访问 "),o("code",[v._v("http://money.com")]),v._v(" 的主页，浏览器则会自动帮你带上 "),o("code",[v._v("http://money.com")]),v._v(" 这个"),o("strong",[v._v("域")]),v._v("的 "),o("code",[v._v("cookie")])])]),v._v(" "),o("p",[v._v("这样可以很方便的使得 "),o("code",[v._v("http://money.com")]),v._v(" 的后台程序根据 "),o("code",[v._v("cookie")]),v._v(" 所携带的信息来改善用户的使用体验，最常用的就是以此来识别用户，使用户保持登录状态。但是这样有一个副作用：")]),v._v(" "),o("blockquote",[o("p",[v._v("即使你是在其它"),o("strong",[v._v("域")]),v._v("通过 "),o("code",[v._v("XMLHttpRequest")]),v._v(" 对象发起这个 "),o("code",[v._v("http")]),v._v(" 请求，也同样是带上 "),o("code",[v._v("money.com")]),v._v(" 这个"),o("strong",[v._v("域")]),v._v("的 "),o("code",[v._v("cookie")]),v._v("。这就给坏人带来了机会")])]),v._v(" "),o("p",[o("strong",[v._v("试想这样一个场景")]),v._v(":")]),v._v(" "),o("p",[v._v("你刚登录了 "),o("code",[v._v("http://money.com")]),v._v(" 这个网站，验证信息保存在 "),o("code",[v._v("cookie")]),v._v(" 里，而且还没有过期。然后你又进入了 "),o("code",[v._v("http://坏人.com")]),v._v(" 这个网站，坏人网站载入的时候就在后台用 "),o("code",[v._v("XMLHttpRequest")]),v._v(" 对象向 "),o("code",[v._v("http://money.com")]),v._v(" 发请求。如果浏览器不管不顾，直接就允许了，那这个请求就带着 "),o("code",[v._v("cookie")]),v._v(" 发出去了，服务端一看 "),o("code",[v._v("cookie")]),v._v(" 里的验证信息，是 "),o("code",[v._v("OK")]),v._v(" 的。坏人不就得到服务器返回的信息了么，然后他就拿着你的信息做坏事了，好可怕。")]),v._v(" "),o("p",[v._v("实际上呢，以 "),o("code",[v._v("google-chrome")]),v._v(" 为例（"),o("code",[v._v("google-chrome")]),v._v(" 默认打开了相关的安全策略）：")]),v._v(" "),o("ol",[o("li",[v._v("如果服务端允许任何其它域来请求：则允许这个请求，然后坏人就得逞了。")]),v._v(" "),o("li",[v._v("如果服务端只允许指定的域来请求：发现这个请求来自于"),o("code",[v._v("http://坏人.com")]),v._v(" 域，不在设定的许可名单里，则不会允许这个陌生的请求")])]),v._v(" "),o("blockquote",[o("p",[v._v("当我们关闭了 "),o("code",[v._v("google-chrome")]),v._v(" 的安全策略的时候，这个请求直接就发出去了，根本不管服务端允许不允许的。这是怎么实现的呢，请求里不带发送域或者是直接将发送域替换成目的域吗？")])]),v._v(" "),o("comment-comment")],1)}),[],!1,null,null,null);_.default=t.exports}}]);