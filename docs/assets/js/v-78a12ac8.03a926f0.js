"use strict";(self.webpackChunkziqiangxu_github_io=self.webpackChunkziqiangxu_github_io||[]).push([[7401],{6512:(a,e,t)=>{t.r(e),t.d(e,{data:()=>i});const i={key:"v-78a12ac8",path:"/data-structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97.html",title:"栈和队列",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"栈（stack）",slug:"栈-stack",children:[]},{level:2,title:"队列",slug:"队列",children:[]}],filePathRelative:"data-structure/数据结构第三章-栈和队列.md",git:{updatedTime:162771849e4,contributors:[{name:"daryl",email:"ziqiang_xu@qq.com",commits:3},{name:"Daryl Xu",email:"ziqiang_xu@qq.com",commits:1},{name:"Daryl.Xu",email:"ziqiang_xu@yeah.net",commits:1}]}}},1698:(a,e,t)=>{t.r(e),t.d(e,{default:()=>r});const i=(0,t(6252).uE)('<h1 id="栈和队列" tabindex="-1"><a class="header-anchor" href="#栈和队列" aria-hidden="true">#</a> 栈和队列</h1><h2 id="栈-stack" tabindex="-1"><a class="header-anchor" href="#栈-stack" aria-hidden="true">#</a> 栈（stack）</h2><p>可定义为只能在末端插入和删除的线性表。也可根据存储的方式分为顺序栈（基于数组存储）和链式栈（基于链表存储）。</p><h2 id="队列" tabindex="-1"><a class="header-anchor" href="#队列" aria-hidden="true">#</a> 队列</h2><p>只允许在表的一端插入，在另一端删除。也可根据存储的方式分为顺序队列（基于数组存储）和链式队列（基于链表存储）。</p>',5),r={render:function(a,e){return i}}}}]);