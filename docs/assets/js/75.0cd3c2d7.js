(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{176:function(e,n,t){"use strict";t.r(n);var i=t(0),a=Object(i.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"content"},[t("p",[e._v("在开发Linux桌面软件的时候，我们有时候需要用其他用户的身份执行一些操作，通常是root用户。")]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._m(4),e._v(" "),e._m(5),e._v(" "),t("p",[e._v("参考：\n"),t("a",{attrs:{href:"https://www.freedesktop.org/software/polkit/docs/latest/polkit.8.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("freedestop的polkit介绍"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://www.freedesktop.org/software/polkit/docs/latest/pkexec.1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("freedesktop的pkexec介绍"),t("OutboundLink")],1),e._v("\nhttps://segmentfault.com/a/1190000008063961")])])},[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ul",[t("li",[e._v("方法一：sudo命令\n"),t("code",[e._v('echo "passwd" | sudo -S gedit')]),e._v(" "),t("code",[e._v("sudo")]),e._v(" 的"),t("code",[e._v("-S")]),e._v("选项是从标准输出流读取密码，如果使用这种方法不能调出上面的弹窗。你可以自己写一个弹窗，如果这样，在索要用户权限的时候，程序就可以获得用户的密码了（用户可能会质疑），不推荐。")]),e._v(" "),t("li",[e._v("方法二：polkit\n如图所示：\n"),t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/6434906-1abedfd0b8712af1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"深度截图_deepin-graphics-driver-manager_20180905202415.png"}}),e._v("\n常见到吧，这个是怎么调用出来的呢？")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("常见的Linux发行版都有polkit模块，deepin也开发了一套，dde-polkit-agent是遵守freedesktop规范的。\n我们只要配置好规则文件然后在终端执行：\n"),n("code",[this._v("pkexec [可执行文件]")]),this._v("\n就可以看到这个授权窗口了")])},function(){var e=this.$createElement,n=this._self._c||e;return n("ol",[n("li",[this._v("配置文件\n以deepin的/usr/share/polkit-1/actions/com.deepin.pkexec.dde-file-manager.policy文件为例")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE policyconfig PUBLIC\n "-//freedesktop//DTD PolicyKit Policy Configuration 1.0//EN"\n "http://www.freedesktop.org/standards/PolicyKit/1/policyconfig.dtd">\n<policyconfig>\n  <vendor>Deepin</vendor>\n  <vendor_url>https://www.deepin.com</vendor_url>\n  \x3c!-- 权限ID，这个必须唯一 --\x3e\n  <action id="com.deepin.pkexec.dde-file-manager">\n    \x3c!-- 图标 这个我不知道存在哪里，再研究研究--\x3e\n    <icon_name>folder</icon_name>\n    \x3c!-- 弹窗提示 --\x3e\n    <message>Authentication is required to run the Deepin File Manager</message>\n    <defaults>\n      <allow_any>no</allow_any>\n      <allow_inactive>no</allow_inactive>\n      <allow_active>auth_admin_keep</allow_active>\n      \x3c!-- 这个defaults节点下的所有子节点可以有这些值no,yes,auth_self,auth_admin,auth_self_keep,auth_admin_keep　--\x3e\n    </defaults>\n    \x3c!-- 语言为简体中文时的弹窗提示 --\x3e\n    <message xml:lang="zh_CN">查看文件夹需要输入密码</message>\n    \x3c!-- 权限提升的可执行文件，需是二进制文件 --\x3e\n    <annotate key="org.freedesktop.policykit.exec.path">/usr/bin/dde-file-manager</annotate>\n    \x3c!-- 这行听说是是否允许GUI，但是测试的时候好像不起作用 --\x3e\n    <annotate key="org.freedesktop.policykit.exec.allow_gui">true</annotate>\n  </action>\n</policyconfig>\n')])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("只需要根据你的需要创建一份这样的文件（以policy结尾），然后保存到/usr/share/polkit-1/action这个目录下。\n可以执行"),n("code",[this._v("pkaction")]),this._v("查看现有的policy\n2. 调出弹窗\n在终端执行\n"),n("code",[this._v("pkexec [二进制可执行文件]")]),this._v("\n当然，根据上述配置文件，应该是\n"),n("code",[this._v("pkexec /usr/bin/dde-file-manager")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("blockquote",[n("p",[this._v("Tips: 如果要给脚本提权怎么办呢，我们就需要借助一个shell解释器——它是一个二进制的可执行文件，我们选用/bin/bash，先给bash创建一个policy文件[deepin不用创建，已经有了]，然后执行\n"),n("code",[this._v("pkexec /bin/bash -x [脚本]")]),this._v("\n将脚本作为bash的参数【在deepin下执行有个副作用，因为深度显卡驱动管理器的脚本提权用到了bash，所以会显示驱动管理器的图标和提示】")])])}],!1,null,null,null);n.default=a.exports}}]);