import{_ as i,o as a,c as e,e as n}from"./app-a9fd3389.js";const t={},h=n('<h1 id="php-与-nginx的结合" tabindex="-1"><a class="header-anchor" href="#php-与-nginx的结合" aria-hidden="true">#</a> <code>PHP</code> 与 <code>Nginx</code>的结合</h1><ul><li><code>nginx</code>：web服务器，反向代理软件</li><li><code>PHP</code>：脚本语言</li><li><code>php-fpm</code>：默认监听9000端口，处理来自nginx转发的任务。 用户发起网络请求时，对请求进行判断，PHP文件的时候，nginx会把请求转交给php-fpm监听的端口（在nginx的配置文件里面设置）。</li></ul><h2 id="流程" tabindex="-1"><a class="header-anchor" href="#流程" aria-hidden="true">#</a> 流程</h2><ol><li>浏览器发起请求</li><li>nginx处理进行转发（这就是所谓的负载均衡），转发到php-fpm监听的端口</li><li>php-fpm应该是php的一个进程管理工具，它把nginx的请求用CGI的形式告诉给PHP</li><li>PHP返回执行结果，再由php-fpm告诉nginx</li><li>nginx把结果返回给浏览器</li></ol><h3 id="fastcgi-split-path-info" tabindex="-1"><a class="header-anchor" href="#fastcgi-split-path-info" aria-hidden="true">#</a> fastcgi_split_path_info</h3><p>把uri分解成fastcgi_script_name和fastcgi_path</p><h3 id="try-files" tabindex="-1"><a class="header-anchor" href="#try-files" aria-hidden="true">#</a> try_files</h3><h3 id="fastcgi-param" tabindex="-1"><a class="header-anchor" href="#fastcgi-param" aria-hidden="true">#</a> fastcgi_param</h3>',8),c=[h];function r(d,l){return a(),e("div",null,c)}const p=i(t,[["render",r],["__file","PHP与Nginx的结合.html.vue"]]);export{p as default};
