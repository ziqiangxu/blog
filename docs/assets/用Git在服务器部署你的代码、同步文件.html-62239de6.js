import{_ as t,r as i,o as c,c as o,a,b as e,d as s,e as l}from"./app-84a4fe47.js";const r={},d=l(`<h1 id="用-git-在服务器部署你的代码、同步文件" tabindex="-1"><a class="header-anchor" href="#用-git-在服务器部署你的代码、同步文件" aria-hidden="true">#</a> 用 <code>Git</code> 在服务器部署你的代码、同步文件</h1><p>应用场景： 1.构建私有仓库，只是保存代码的话还是推荐coding或github； 2.需要在服务器和本地同步文件； 3.需要在服务器部署代码； 4......还有很多，等你去发现呢 开始干活儿：</p><h2 id="第一步-配置服务端" tabindex="-1"><a class="header-anchor" href="#第一步-配置服务端" aria-hidden="true">#</a> 第一步 配置服务端：</h2><p>假设:</p><ul><li>当前用户名是test;</li><li>ip地址是：45.76.222.90</li><li>当前目录是/home/test/</li></ul><p>1、服务器安装git，并初始化仓库 git init [仓库名] <code>git init git-test</code> 然后就出现了一个git-test文件夹 2、允许仓库接受远程推送 先切换到仓库目录下 <code>git config receive.denyCurrentBranch ignore</code> 这样就产生了一个远程仓库，仓库地址是 <code>ssh://test@45.76.222.90:/home/test/git-test.git</code></p><h2 id="第二步-配置本地端" tabindex="-1"><a class="header-anchor" href="#第二步-配置本地端" aria-hidden="true">#</a> 第二步 配置本地端</h2><p><code>git clone ssh://test@45.76.222.90:/home/test/git-test.git</code> 然后就可以向服务端push文件了,要使用这一组命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;fast-commit&quot;</span>
<span class="token function">git</span> push master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第三步-服务端接收文件" tabindex="-1"><a class="header-anchor" href="#第三步-服务端接收文件" aria-hidden="true">#</a> 第三步 服务端接收文件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> update-server-info
<span class="token function">git</span> checkout <span class="token parameter variable">-f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>还可以直接编辑仓库里.git/hooks/目录下新建一个post-update文件，内容是</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token builtin class-name">cd</span> <span class="token punctuation">[</span>仓库路径<span class="token punctuation">]</span>
<span class="token builtin class-name">unset</span> GIT_DIR
<span class="token function">git</span> checkout <span class="token parameter variable">-f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>记得给这个脚本添加可执行权限</p></blockquote><p>这样本地提交代码之后服务器就可以自动检出了，当然你也可以在这个文件里加入更多的Linux命令，实现你的想要执行的操作。</p>`,15),p={href:"https://www.jianshu.com/p/6761199bedba",target:"_blank",rel:"noopener noreferrer"},u={href:"https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90",target:"_blank",rel:"noopener noreferrer"};function h(m,b){const n=i("ExternalLinkIcon");return c(),o("div",null,[d,a("blockquote",null,[a("p",null,[e("这样配置，每次提交和拉取数据都要输入密码进行验证，很烦。可以配置服务器的"),a("a",p,[e("ssh免密登录"),s(n)]),e("来进一步简化工作。")])]),a("p",null,[e("您还可以参考"),a("a",u,[e("其他教程"),s(n)]),e("，本教程适合快速实现需求，您需要学习更多git知识")])])}const v=t(r,[["render",h],["__file","用Git在服务器部署你的代码、同步文件.html.vue"]]);export{v as default};
